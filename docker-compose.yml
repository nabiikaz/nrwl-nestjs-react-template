version: '3'
services:
  webserver:
    image: nginx:alpine
    depends_on:
      - api
    volumes:
      - ./server-config/webserver:/etc/nginx
    ports:
      - '${NGINX_HTTP_PORT}:80'
    restart: unless-stopped

  api:
    image: api
    depends_on:
      - database
    build:
      context: .
      dockerfile: ./server-config/docker/${NODE_ENV}.api.dockerfile
    env_file:
      - .env
    ports:
      - '${APPS_HTTP_PORTS_RANGE}:3333'
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/node_modules

  frontend:
    image: frontend
    depends_on:
      - api
    build:
      context: .
      dockerfile: ./server-config/docker/${NODE_ENV}.frontend.dockerfile
    ports:
      - '${APPS_HTTP_PORTS_RANGE}:80'
    volumes:
      - .:/home/node/app
      - node_modules:/home/node/node_modules
    restart: unless-stopped

  database:
    image: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - '${POSTGRES_PORT}:5432'
    volumes:
      - database-data:/var/lib/postgresql/data/
    restart: unless-stopped

volumes:
  database-data:
  node_modules:

networks:
  default:
    external:
      name: ${DOCKER_SHARED_NETWORK}
